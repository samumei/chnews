% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/woz_articles.R
\name{get_woz_articles_continously}
\alias{get_woz_articles_continously}
\title{Get newest WOZ articles over a defined period of time}
\usage{
get_woz_articles_continously(
  woz_articles = NULL,
  update_in_minutes = 15,
  total_updates = 48,
  sections = c("schweiz", "wirtschaft", "international", "kultur-wissen"),
  save_backup = TRUE
)
}
\arguments{
\item{woz_articles}{either NULL (default) or a data frame containing previously fetched articles (see details).
IF NULL, an empty skeleton is automatically provided with \code{construct_woz_df_skeleton()}.
Else, the new or updated articles are appended to existing data frame \code{woz_articles}.}

\item{update_in_minutes}{an integer that defines after how many minutes the function should check for new or updated articles.}

\item{total_updates}{an integer that defines the total amount of updates. Multiplying \code{total_updates} with \code{update_in_minutes} gives a rough approximation of total execution time.}

\item{sections}{sections to scrape on woz.ch. Default is all the permanent sections currently (2022-04-06) on the website.}

\item{save_backup}{If TRUE (default) stores the articles as csv-file after every mutation as backup.}
}
\value{
the data frame \code{woz_articles} updated with all the fetched articles.
}
\description{
Function regularly fetches the most recent online articles of the Swiss news outlet "Die Wochenzeitung (WOZ)".
This function is especially useful to analyze if and how articles are being updated after they have been published online.
}
\details{
The following columns need to exist in the df \code{woz_articles}, if it is provided as parameter:
\code{woz_articles}:
\itemize{
 \item{"section"}
 \item{"published_time"}
 \item{"modified_time"}
 \item{"full_link}
 \item{"field_issue"}
 \item{"title"}
 \item{"subtitle"}
 \item{"author}
 \item{"image_link}
 \item{"image_caption}
 \item{"text_titles}
 \item{"text"}
 \item{"prowoz"}
}
}
\examples{
# not run
# get_woz_articles_continously(woz_articles = NULL, update_in_minutes = 5, total_updates = 50)

}
